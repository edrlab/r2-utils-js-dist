{"version":3,"file":"zipFactory.js","sourceRoot":"","sources":["../../../../../src/_utils/zip/zipFactory.ts"],"names":[],"mappings":";;AAAA,yBAAyB;AAEzB,+CAA0C;AAE1C,qCAAuC;AACvC,iCAA8B;AAC9B,iCAA8B;AAEvB,KAAK,yBAAyB,QAAgB;IACjD,EAAE,CAAC,CAAC,iBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,KAAK,GAAG,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACrC,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,oBAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM,CAAC,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AACtC,CAAC;AAXD,wCAWC","sourcesContent":["import * as fs from \"fs\";\n\nimport { isHTTP } from \"../http/UrlUtils\";\nimport { IZip } from \"./zip\";\nimport { ZipExploded } from \"./zip-ex\";\nimport { Zip1 } from \"./zip1\";\nimport { Zip2 } from \"./zip2\";\n\nexport async function zipLoadPromise(filePath: string): Promise<IZip> {\n    if (isHTTP(filePath)) {\n        return Zip2.loadPromise(filePath);\n    }\n\n    const stats = fs.lstatSync(filePath);\n    if (stats.isDirectory()) {\n        return ZipExploded.loadPromise(filePath);\n    }\n\n    return Zip1.loadPromise(filePath);\n}\n"]}