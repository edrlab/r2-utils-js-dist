{"version":3,"file":"zipFactory.js","sourceRoot":"","sources":["../../../../../src/_utils/zip/zipFactory.ts"],"names":[],"mappings":";;AAOA,yBAAyB;AAEzB,+CAA0C;AAE1C,qCAAuC;AACvC,iCAA8B;AAC9B,iCAA8B;AAEvB,KAAK,yBAAyB,QAAgB;IACjD,IAAI,iBAAM,CAAC,QAAQ,CAAC,EAAE;QAClB,OAAO,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KACrC;IAED,MAAM,KAAK,GAAG,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACrC,IAAI,KAAK,CAAC,WAAW,EAAE,EAAE;QACrB,OAAO,oBAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC5C;IAED,OAAO,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AACtC,CAAC;AAXD,wCAWC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as fs from \"fs\";\n\nimport { isHTTP } from \"../http/UrlUtils\";\nimport { IZip } from \"./zip\";\nimport { ZipExploded } from \"./zip-ex\";\nimport { Zip1 } from \"./zip1\";\nimport { Zip2 } from \"./zip2\";\n\nexport async function zipLoadPromise(filePath: string): Promise<IZip> {\n    if (isHTTP(filePath)) {\n        return Zip2.loadPromise(filePath);\n    }\n\n    const stats = fs.lstatSync(filePath);\n    if (stats.isDirectory()) {\n        return ZipExploded.loadPromise(filePath);\n    }\n\n    return Zip1.loadPromise(filePath);\n}\n"]}