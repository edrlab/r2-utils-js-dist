{"version":3,"file":"converter.js","sourceRoot":"","sources":["../../../../../../src/_utils/xml-js-mapper/converters/converter.ts"],"names":[],"mappings":";;;AAQA,uDAAqD;AACrD,mDAAiD;AAWpC,QAAA,kBAAkB,GAA0C,IAAI,GAAG,EAAoC,CAAC;AAGrH,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC/B,0BAAkB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,kCAAe,EAAE,CAAC,CAAC;CACzD;AACD,0BAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,8BAAa,EAAE,CAAC,CAAC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { FunctionType } from \"../types\";\nimport { BufferConverter } from \"./buffer-converter\";\nimport { DateConverter } from \"./date-converter\";\n\n// import { NumberConverter } from \"./number-converter\";\n\nexport interface IPropertyConverter {\n    serialize(property: any): string;\n    deserialize(value: string): any;\n\n    // collapseArrayWithSingleItem():boolean;\n}\n\nexport const propertyConverters: Map<FunctionType, IPropertyConverter> = new Map<FunctionType, IPropertyConverter>();\n\n// Only import Buffer code if running in NodeJS\nif (typeof window === \"undefined\") {\n    propertyConverters.set(Buffer, new BufferConverter());\n}\npropertyConverters.set(Date, new DateConverter());\n// propertyConverters.set(Number, new NumberConverter());\n"]}