{"version":3,"file":"perf-cli.js","sourceRoot":"","sources":["../../../../src/_utils/perf-cli.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport { IZip } from \"@utils/zip/zip\";\nimport { Zip1 } from \"@utils/zip/zip1\";\nimport { Zip2 } from \"@utils/zip/zip2\";\nimport { Zip3 } from \"@utils/zip/zip3\";\n\nconsole.log(\"process.cwd():\");\nconsole.log(process.cwd());\n\nconsole.log(\"__dirname:\");\nconsole.log(__dirname);\n\nconst args = process.argv.slice(2);\nconsole.log(\"args:\");\nconsole.log(args);\n\nif (!args[0]) {\n    console.log(\"FILEPATH ARGUMENT IS MISSING.\");\n    process.exit(1);\n}\nconst argPath = args[0].trim();\nlet filePath = argPath;\nconsole.log(filePath);\nif (!fs.existsSync(filePath)) {\n    filePath = path.join(__dirname, argPath);\n    console.log(filePath);\n    if (!fs.existsSync(filePath)) {\n        filePath = path.join(process.cwd(), argPath);\n        console.log(filePath);\n        if (!fs.existsSync(filePath)) {\n            console.log(\"FILEPATH DOES NOT EXIST.\");\n            process.exit(1);\n        }\n    }\n}\n\nconst fileName = path.basename(filePath);\nconst ext = path.extname(fileName).toLowerCase();\n\nif (/\\.epub[3]?$/.test(ext) || ext === \".cbz\" || ext === \".zip\") {\n    // tslint:disable-next-line:no-floating-promises\n    (async () => {\n        const time3 = process.hrtime();\n        const zip3: IZip = await Zip3.loadPromise(filePath);\n        const diff3 = process.hrtime(time3);\n        console.log(`Zip 3 (${zip3.entriesCount()}): ${diff3[0]} seconds + ${diff3[1]} nanoseconds`);\n\n        const time2 = process.hrtime();\n        const zip2: IZip = await Zip2.loadPromise(filePath);\n        const diff2 = process.hrtime(time2);\n        console.log(`Zip 2 (${zip2.entriesCount()}): ${diff2[0]} seconds + ${diff2[1]} nanoseconds`);\n\n        const time1 = process.hrtime();\n        const zip1: IZip = await Zip1.loadPromise(filePath);\n        const diff1 = process.hrtime(time1);\n        // const nanos = diff1[0] * 1e9 + diff1[1];\n        console.log(`Zip 1 (${zip1.entriesCount()}): ${diff1[0]} seconds + ${diff1[1]} nanoseconds`);\n    })();\n}\n"]}