{"version":3,"file":"zipFactory.js","sourceRoot":"","sources":["../../../../../src/_utils/zip/zipFactory.ts"],"names":[],"mappings":";;;AAAA,uBAAyB;AAEzB,6CAA0C;AAE1C,mCAAuC;AACvC,+BAA8B;AAC9B,+BAA8B;AAE9B,wBAAqC,QAAgB;;;;YACjD,EAAE,CAAC,CAAC,iBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnB,MAAM,KAAC,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAC;YACtC,CAAC;YAEK,KAAK,GAAG,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,KAAC,oBAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAC;YAC7C,CAAC;YAED,WAAO,WAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAC;;;CACrC;AAXD,wCAWC","sourcesContent":["import * as fs from \"fs\";\n\nimport { isHTTP } from \"../http/UrlUtils\";\nimport { IZip } from \"./zip\";\nimport { ZipExploded } from \"./zip-ex\";\nimport { Zip1 } from \"./zip1\";\nimport { Zip2 } from \"./zip2\";\n\nexport async function zipLoadPromise(filePath: string): Promise<IZip> {\n    if (isHTTP(filePath)) {\n        return Zip2.loadPromise(filePath);\n    }\n\n    const stats = fs.lstatSync(filePath);\n    if (stats.isDirectory()) {\n        return ZipExploded.loadPromise(filePath);\n    }\n\n    return Zip1.loadPromise(filePath);\n}\n"]}