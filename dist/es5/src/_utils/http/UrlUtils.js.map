{"version":3,"file":"UrlUtils.js","sourceRoot":"","sources":["../../../../../src/_utils/http/UrlUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from \"path\";\nimport * as querystring from \"querystring\";\n\nexport function isHTTP(urlOrPath: string): boolean {\n    // TODO: smarter regexp\n    return urlOrPath.indexOf(\"http\") === 0;\n}\n\nexport function encodeURIComponent_RFC3986(str: string): string {\n    return encodeURIComponent(str)\n        .replace(/[!'()*]/g, (c: string) => {\n            return \"%\" + c.charCodeAt(0).toString(16);\n        });\n}\n\nexport function encodeURIComponent_RFC5987(str: string): string {\n    return encodeURIComponent(str).\n        replace(/['()]/g, querystring.escape). // i.e., %27 %28 %29\n        replace(/\\*/g, \"%2A\").\n        // |`^\n        replace(/%(?:7C|60|5E)/g, querystring.unescape);\n}\n\n// TODO: use URI/URL lib to do this?\nexport function ensureAbsolute(rootUrl: string, linkHref: string) {\n    let url = linkHref;\n    if (!isHTTP(url) && url.indexOf(\"data:\") !== 0) {\n\n        if (url.indexOf(\"//\") === 0) {\n            if (rootUrl.indexOf(\"https://\") === 0) {\n                url = \"https:\" + url;\n            } else {\n                url = \"http:\" + url;\n            }\n            return url;\n        }\n\n        if (url[0] === \"/\") {\n            const j = rootUrl.replace(/:\\/\\//g, \":__\").indexOf(\"/\");\n            const rootUrlOrigin = rootUrl.substr(0, j);\n            url = path.join(rootUrlOrigin, url);\n        } else {\n            const i = rootUrl.indexOf(\"?\");\n            let rootUrlWithoutQuery = rootUrl;\n            if (i >= 0) {\n                rootUrlWithoutQuery = rootUrlWithoutQuery.substr(0, i);\n            }\n\n            if (rootUrlWithoutQuery.substr(-1) === \"/\") {\n                url = path.join(rootUrlWithoutQuery, url);\n            } else {\n                url = path.join(path.dirname(rootUrlWithoutQuery), url);\n            }\n        }\n        url = url.replace(/\\\\/g, \"/\").replace(/^https:\\//g, \"https:\\/\\/\").replace(/^http:\\//g, \"http:\\/\\/\");\n    }\n    return url;\n}\n"]}